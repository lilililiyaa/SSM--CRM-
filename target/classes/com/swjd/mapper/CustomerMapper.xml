<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.swjd.mapper.CustomerMapper" >
    <select id="getAll" resultType="com.swjd.bean.Customer">
        SELECT
        c.customerId,
        c.customerName,
        c.customerUserId,
        ( SELECT u.realname FROM `user` u WHERE u.uid = c.customerUserId )
            AS
            customerUserName,
            c.customerCreateId,
            c.customerSourse,
        ( SELECT d.dictItemName FROM dict d WHERE d.dictType = '002' AND d.dictItemCode = c.customerSourse )
            AS
            customerSourseDict,
            c.customerIndustry,
        ( SELECT d.dictItemName FROM dict d WHERE d.dictType = '001' AND d.dictItemCode = c.customerIndustry )
            AS
            customerIndustryDict,
        c.customerPhone,
        c.customerAddress,
        c.customerDate
        FROM
        customer c
    </select>

    <!--条件分页查询的方法-->
    <select id="findForSearch" resultType="com.swjd.bean.Customer">
        SELECT
        c.customerId,
        c.customerName,
        c.customerUserId,
        ( SELECT u.realname FROM `user` u WHERE u.uid = c.customerUserId )
            AS
            customerUserName,
            c.customerCreateId,
            c.customerSourse,
        ( SELECT d.dictItemName FROM dict d WHERE d.dictType = '002' AND d.dictItemCode = c.customerSourse )
            AS
            customerSourseDict,
            c.customerIndustry,
        ( SELECT d.dictItemName FROM dict d WHERE d.dictType = '001' AND d.dictItemCode = c.customerIndustry )
            AS
            customerIndustryDict,
        c.customerPhone,
        c.customerAddress,
        c.customerDate
        FROM
        customer c
        where 1=1
        <if test="map.customerId!=null and map.customerId!=''">
            and customerId=#{map.customerId}
        </if>
        <if test="map.customerName!=null and map.customerName!=''">
            and customerName like concat('%',#{map.customerName},'%')
        </if>
        <if test="map.customerSourse!=null and map.customerSourse!=''">
            and customerSourse=#{map.customerSourse}
        </if>
        <if test="map.customerDateBegin!=null and map.customerDateBegin!=''">
            and customerDate>=#{map.customerDateBegin}
        </if>
        <if test="map.customerDateEnd!=null and map.customerDateEnd!=''">
            <![CDATA[ and customerDate<=#{map.customerDateEnd}]]>
        </if>
        order by customerDate desc
        limit #{page},#{rows}
    </select>

    <!--总条数-->
    <select id="findForCount" resultType="int">
        select count(*) from customer
        where 1=1
        <if test="map.customerId!=null and map.customerId!=''">
            and customerId=#{map.customerId}
        </if>
        <if test="map.customerName!=null and map.customerName!=''">
            and customerName like concat('%',#{map.customerName},'%')
        </if>
        <if test="map.customerSourse!=null and map.customerSourse!=''">
            and customerSourse=#{map.customerSourse}
        </if>
        <if test="map.customerDateBegin!=null and map.customerDateBegin!=''">
            and customerDate>=#{map.customerDateBegin}
        </if>
        <if test="map.customerDateEnd!=null and map.customerDateEnd!=''">
            <![CDATA[ and customerDate<=#{map.customerDateEnd}]]>
        </if>
    </select>

    <insert id="addCustomer">
        insert into customer values (null ,#{customerName},#{customerUserId},
        #{customerCreateId},#{customerSourse},#{customerIndustry},#{customerPhone},
        #{customerAddress},#{customerDate})
    </insert>
    <delete id="deleteCustomer"></delete>

    <delete id="deleteCustomerByIds">
         delete from customer where customerId in
        <foreach item="id" collection="array" index="no" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updateCustomer">
        update customer set customerName=#{customerName},customerUserId=#{customerUserId},
        customerCreateId=#{customerCreateId},customerSourse=#{customerSourse},
        customerIndustry=#{customerIndustry},customerPhone=#{customerPhone},
        customerAddress=#{customerAddress},customerDate=#{customerDate}
        where customerId=#{customerId}
    </update>
    <select id="seloneCustomer" resultType="com.swjd.bean.Customer">
        select * from customer where customerId=#{CustomerId};
    </select>

</mapper>